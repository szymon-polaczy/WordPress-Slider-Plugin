{"version":3,"file":"index.js","mappings":"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","sources":["webpack://wordpress-slider-plugin/external window [\"wp\",\"blockEditor\"]","webpack://wordpress-slider-plugin/external window [\"wp\",\"blocks\"]","webpack://wordpress-slider-plugin/external window [\"wp\",\"components\"]","webpack://wordpress-slider-plugin/external window [\"wp\",\"element\"]","webpack://wordpress-slider-plugin/webpack/bootstrap","webpack://wordpress-slider-plugin/webpack/runtime/compat get default export","webpack://wordpress-slider-plugin/webpack/runtime/define property getters","webpack://wordpress-slider-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://wordpress-slider-plugin/webpack/runtime/make namespace object","webpack://wordpress-slider-plugin/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps, MediaUpload, MediaPlaceholder, RichText, MediaUploadCheck, InspectorControls } from '@wordpress/block-editor';\nimport { Button, Draggable, Panel, SelectControl } from '@wordpress/components';\n\nimport metadata from './../block.json';\n\nimport {\n\tIconButton,\n\tPanelBody,\n} from '@wordpress/components';\n\nregisterBlockType( \n\tmetadata,\n\t{\n\t\tedit: ( { attributes, setAttributes } ) => {\n      const blockProps = useBlockProps();\n      const { slides } = attributes;\n\n      console.log(slides);\n\n      const addSlide = () => {\n        const new_slide = {image: null, text: null};\n        setAttributes( { slides: [ ...slides, new_slide ] } );\n      }\n\n      const onTextChange = (new_value, index) => {\n        slides[index].text = new_value;\n        setAttributes(slides);\n        console.log(slides);\n      }\n\n      const onImageChange = (new_image, index) => {\n        slides[index].image = new_image;\n        setAttributes(slides);\n        console.log(slides);\n      }\n \n      return <div {...blockProps}>\n        { slides ? \n        <section>\n          { slides.map((slide, index) =>\n          <Panel>\n            <PanelBody>\n                <MediaPlaceholder\n                      onSelect = {(imageObject) => onImageChange(imageObject, index)}\n                      allowedTypes = { [ 'image' ] }\n                      multiple = { false }\n                      labels = {{title: null}}\n                      value={slide.image?.url}\n                      mediaPreview={slide.image ? <img src={slide.image.url}/> : ''}\n                    />\n\n                <RichText\n                  tagName=\"div\"\n                  placeholder=\"Insert slider text here\"\n                  value={slide.text}\n                  onChange={(newText) => onTextChange(newText, index)}\n                  allowedFormats={['core/bold', 'core/italic', 'core/link']}\n                />\n\n                <SelectControl\n                            label=\"Vertical Position\"\n                            options={ [\n                                { label: 'Top', value: 'top' },\n                                { label: 'Center', value: 'center' },\n                                { label: 'Bottom', value: 'bottom' },\n                            ] }\n                        />\n\n                        <SelectControl\n                                    label=\"Horizontal Position\"\n                                    options={ [\n                                        { label: 'Left', value: 'top' },\n                                        { label: 'Center', value: 'center' },\n                                        { label: 'Right', value: 'bottom' },\n                                    ] }\n                                />\n\n              <IconButton\n                icon=\"no-alt\"\n                label={`Delete slide number ${index}`}\n                onClick={ () => {console.log('add deleting slides')} }\n              />\n            </PanelBody>\n          </Panel>\n          )}\n        </section> : <p>No Slides</p>}\n\n        <IconButton\n                icon=\"plus\"\n                label=\"Add another slide\"\n                onClick={ addSlide }\n        >\n          Add Slide\n        </IconButton>\n      </div>\n    },\n\t\tsave: ( { attributes } ) => {\n      const blockProps = useBlockProps.save();\n      const { slides } = attributes;\n\n      //\n      if ( slides ) {\n        return <section {...blockProps}>\n          { slides.map(slide => \n            <div>\n              <RichText.Content value={slide.text} />\n              <img src={slide.image?.url}/>\n            </div>\n          ) }\n        </section>\n      } else {\n        return <p>No Slides</p>\n      }\n    },\n\t\tattributes: {\n      slides: {\n        type: 'array',\n\t\t\t  default: [\n          {\n            image: null,\n            text: null\n          }\n        ],\n      },\n\t\t}\n\t}\n)\n"],"names":["registerBlockType","useBlockProps","MediaUpload","MediaPlaceholder","RichText","MediaUploadCheck","InspectorControls","Button","Draggable","Panel","SelectControl","metadata","IconButton","PanelBody","edit","_ref","attributes","setAttributes","blockProps","slides","console","log","addSlide","new_slide","image","text","onTextChange","new_value","index","onImageChange","new_image","createElement","map","slide","onSelect","imageObject","allowedTypes","multiple","labels","title","value","url","mediaPreview","src","tagName","placeholder","onChange","newText","allowedFormats","label","options","icon","onClick","save","_ref2","Content","type","default"],"sourceRoot":""}