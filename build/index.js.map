{"version":3,"file":"index.js","mappings":"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","sources":["webpack://wordpress-slider-plugin/external window [\"wp\",\"blockEditor\"]","webpack://wordpress-slider-plugin/external window [\"wp\",\"blocks\"]","webpack://wordpress-slider-plugin/external window [\"wp\",\"components\"]","webpack://wordpress-slider-plugin/external window [\"wp\",\"element\"]","webpack://wordpress-slider-plugin/webpack/bootstrap","webpack://wordpress-slider-plugin/webpack/runtime/compat get default export","webpack://wordpress-slider-plugin/webpack/runtime/define property getters","webpack://wordpress-slider-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://wordpress-slider-plugin/webpack/runtime/make namespace object","webpack://wordpress-slider-plugin/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\n\nimport {\n  IconButton,\n  PanelBody,\n  Panel,\n  SelectControl,\n  CheckboxControl,\n  RadioControl,\n  TextControl,\n  ToggleControl,\n} from '@wordpress/components';\n\nimport {\n  useBlockProps,\n  MediaPlaceholder,\n  RichText,\n  ColorPalette,\n  InspectorControls,\n} from '@wordpress/block-editor';\n\nimport metadata from './../block.json';\n\nregisterBlockType(\n  metadata,\n  {\n    edit: ({ attributes, setAttributes }) => {\n      const blockProps = useBlockProps();\n      const { slides, settings } = attributes;\n\n      const addSlide = () => {\n        const new_slide = { image: null, text: null, horizontal: null, vertical: null };\n        setAttributes({ slides: [...slides, new_slide] });\n      }\n\n      const removeSlide = index => {\n        slides.splice(index, 1);\n        setAttributes({slides: [...slides]});\n      }\n\n      const onTextChange = (new_value, index) => {\n        slides[index].text = new_value;\n        setAttributes({slides: [...slides]});\n      }\n\n      const onImageChange = (new_image, index) => {\n        slides[index].image = new_image;\n        setAttributes({slides: [...slides]});\n      }\n\n      const onVerticalChange = (new_value, index, responsiveness) => {\n        const active_value = slides[index].vertical;\n\n        if (active_value) {\n          active_value[responsiveness] = new_value;\n          slides[index].vertical = active_value;\n        } else {\n          const new_vertical = new Object();\n          new_vertical[responsiveness] = new_value;\n          slides[index].vertical = new_vertical;\n        }\n\n        setAttributes({slides: [...slides]});\n      }\n\n      const onHorizontalChange = (new_value, index) => {\n        slides[index].horizontal = new_value;\n        setAttributes({slides: [...slides]});\n      }\n\n        const updateSetting = (new_value, setting) => {\n            settings[setting] = new_value;\n            setAttributes({settings: {...settings}});\n        }\n\n\n      return <div {...blockProps}>\n        {slides ?\n          <section>\n            <InspectorControls key=\"setting\">\n              <TextControl\n                label=\"Slides per page\"\n                value={ settings.perPage }\n                onChange={ (new_value) => updateSetting(new_value, 'perPage') }\n              />\n\n              <TextControl\n                label=\"Slides per move\"\n                value={ settings.perMove }\n                onChange={ (new_value) => updateSetting(new_value, 'perMove') }\n              />\n\n              <ToggleControl\n                label=\"Enable arrows\"\n                checked={ settings.arrows }\n                onChange={ (new_value) => updateSetting(new_value, 'arrows') }\n              />\n\n              <ToggleControl\n                label=\"Enable pagination (indicator dots)\"\n                checked={ settings.pagination }\n                onChange={ (new_value) => updateSetting(new_value, 'pagination') }\n              />\n\n              <ToggleControl\n                label=\"Enable pause on hover\"\n                checked={ settings.pauseOnHover }\n                onChange={ (new_value) => updateSetting(new_value, 'pauseOnHover') }\n              />\n\n              <ToggleControl\n                label=\"Enable pause on focus\"\n                checked={ settings.pauseOnFocus }\n                onChange={ (new_value) => updateSetting(new_value, 'pauseOnFocus') }\n              />\n\n              <ToggleControl\n                label=\"Enable dragging\"\n                checked={ settings.drag }\n                onChange={ (new_value) => updateSetting(new_value, 'drag') }\n              />\n\n              <ToggleControl\n                label=\"Enable autoplay\"\n                checked={ settings.autoplay }\n                onChange={ (new_value) => updateSetting(new_value, 'autoplay') }\n              />\n\n              <TextControl\n                label=\"Autoplay interval - Number of miliseconds between autoplay intervals\"\n                checked={ settings.interval }\n                onChange={ (new_value) => updateSetting(new_value, 'interval') }\n              />\n\n              <TextControl\n                label=\"Gap between slides (The CSS format is acceptable)\"\n                checked={ settings.gap }\n                onChange={ (new_value) => updateSetting(new_value, 'gap') }\n              />\n\n              <TextControl\n                label=\"Easing function\"\n                help=\"The CSS format is acceptable (linear, ease or cubic-bezier())\"\n                checked={ settings.easing }\n                onChange={ (new_value) => updateSetting(new_value, 'easing') }\n              />\n\n              <TextControl\n                label=\"Transition speed\"\n                help=\"The transition speed in miliseconds (0 to insantly jump to the next)\"\n                checked={ settings.speed }\n                onChange={ (new_value) => updateSetting(new_value, 'speed') }\n              />\n\n              <ToggleControl\n                label=\"Enable rewind to first slide (doesn't work in loop mode)\"\n                checked={ settings.rewind }\n                onChange={ (new_value) => updateSetting(new_value, 'rewind') }\n              />\n\n              <ToggleControl\n                label=\"Enable rewind by drag to first slide (rewind option has to be enabled)\"\n                checked={ settings.rewindByDrag }\n                onChange={ (new_value) => updateSetting(new_value, 'rewindByDrag') }\n              />\n\n              <TextControl\n                label=\"Rewind speed\"\n                help=\"The rewind speed in miliseconds (Transition speed is used as default)\"\n                checked={ settings.rewindSpeed }\n                onChange={ (new_value) => updateSetting(new_value, 'rewindSpeed') }\n              />\n\n              <TextControl\n                label=\"Start slide\"\n                help=\"Define start index\"\n                checked={ settings.start }\n                onChange={ (new_value) => updateSetting(new_value, 'start') }\n              />\n\n              <SelectControl\n                label=\"Slider direction\"\n                options={[\n                  { value: 'ltr', label: 'Left to right' },\n                  { value: 'rtl', label: 'Right to left' },\n                  { value: 'ttb', label: 'Top to bottom' },\n                ]}\n                value={ settings.direction }\n                onChange={ (new_value) => updateSetting(new_value, 'direction') }\n              />\n\n              <SelectControl\n                label=\"Pagination direction\"\n                options={[\n                  { value: 'ltr', label: 'Left to right' },\n                  { value: 'rtl', label: 'Right to left' },\n                  { value: 'ttb', label: 'Top to bottom' },\n                ]}\n                value={ settings.paginationDirection }\n                onChange={ (new_value) => updateSetting(new_value, 'paginationDirection') }\n              />\n\n              <SelectControl\n                label=\"Slider type\"\n                options={[\n                  { value: 'slide', label: 'Slide' },\n                  { value: 'loop', label: 'Loop' },\n                ]}\n                value={ settings.type }\n                onChange={ (new_value) => updateSetting(new_value, 'type') }\n              />\n            </InspectorControls>\n\n            {slides.map((slide, index) =>\n              <Panel class=\"slide\">\n                <PanelBody>\n                  <MediaPlaceholder\n                    onSelect={(imageObject) => onImageChange(imageObject, index)}\n                    allowedTypes={['image']}\n                    multiple={false}\n                    labels={{ title: null }}\n                    value={slide.image?.url}\n                    mediaPreview={slide.image ? <img src={slide.image.url} /> : ''}\n                  />\n\n                  <RichText\n                    class=\"rich-text\"\n                    tagName=\"div\"\n                    placeholder=\"Insert slider text here\"\n                    value={slide.text}\n                    onChange={(newText) => onTextChange(newText, index)}\n                    allowedFormats={['core/bold', 'core/italic', 'core/link', 'core/text-color', 'core/strikethrough']}\n                  />\n\n                  <div class=\"position-wrappers\">\n                    <SelectControl\n                      label=\"Vertical Position (Desktop)\"\n                      onChange={(value) => onVerticalChange(value, index, 'desktop')}\n                      value={slide.vertical?.desktop}\n                      options={[\n                        { label: 'Top', value: 'top' },\n                        { label: 'Center', value: 'center' },\n                        { label: 'Bottom', value: 'bottom' },\n                      ]}\n                    />\n\n                    <SelectControl\n                      label=\"Vertical Position (Mobile)\"\n                      onChange={(value) => onVerticalChange(value, index, 'mobile')}\n                      value={slide.vertical?.mobile}\n                      options={[\n                        { label: 'Top', value: 'top' },\n                        { label: 'Center', value: 'center' },\n                        { label: 'Bottom', value: 'bottom' },\n                      ]}\n                    />\n\n                    <SelectControl\n                      label=\"Horizontal Position (Full width on mobile)\"\n                      onChange={(value) => onHorizontalChange(value, index)}\n                      value={slide.horizontal}\n                      options={[\n                        { label: 'Left', value: 'left' },\n                        { label: 'Center', value: 'center' },\n                        { label: 'Right', value: 'right' },\n                      ]}\n                    />\n                  </div>\n\n                  <div class=\"remove-slide-wrapper\">\n                    <IconButton\n                      icon=\"no-alt\"\n                      label={`Delete slide number ${index}`}\n                      onClick={() => removeSlide(index)}\n                    />\n                  </div>\n                </PanelBody>\n              </Panel>\n            )}\n          </section> : <p>No Slides</p>}\n\n        <IconButton\n          icon=\"plus\"\n          label=\"Add another slide\"\n          onClick={addSlide}\n        >\n          Add Slide\n        </IconButton>\n      </div>\n    },\n    save: ({ attributes }) => {\n      const blockProps = useBlockProps.save();\n      const { slides, settings } = attributes;\n\n        const json = JSON.stringify(settings);\n\n        console.log(slides);\n\n      if (slides) {\n        return <>\n          <section {...blockProps}>\n            <div class=\"splide\" role=\"group\" \n                data-splide={json}\n              >\n              <div class=\"splide__track\">\n                <div class=\"splide__list\">\n                  {slides.map(slide =>\n                    <div class=\"splide__slide\">\n                      <article class=\"slide-text-overlay\"\n                        data-vertical-desktop={slide.vertical?.desktop}\n                        data-vertical-mobile={slide.vertical?.mobile}\n                        data-horizontal={slide.horizontal}\n                      >\n                        <div>\n                          <RichText.Content value={slide.text} />\n                        </div>\n                      </article>\n                      <img src={slide.image?.url}\n                        style=\"max-width: 100%; height: 100%; object-fit: cover;\"\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </section>\n        </>\n      } else {\n        return <p>No Slides</p>\n      }\n    },\n    attributes: {\n      slides: {\n        type: 'array',\n        default: [\n          {\n            image: null,\n            text: null,\n            horizontal: null,\n            vertical: null,\n          }\n        ],\n      },\n        settings: {\n            type: 'object',\n            default: {\n                perPage: '1',\n                perMove: '1', \n                arrows: true, \n                pagination: true,\n                pauseOnHover: false,\n                pauseOnFocus: false, \n                drag: true,\n                autoplay: true, \n                interval: '5000',\n                gap: '0px', \n                easing: 'ease',\n                speed: '1000',\n                rewind: false,\n                rewindByDrag: false,\n                rewindSpeed: '5000',\n                start: '1',\n                direction: 'ltr',\n                pagination: 'ltr',\n                type: 'loop'\n            }\n        }\n    }\n  }\n)\n"],"names":["registerBlockType","IconButton","PanelBody","Panel","SelectControl","CheckboxControl","RadioControl","TextControl","ToggleControl","useBlockProps","MediaPlaceholder","RichText","ColorPalette","InspectorControls","metadata","edit","_ref","attributes","setAttributes","blockProps","slides","settings","addSlide","new_slide","image","text","horizontal","vertical","removeSlide","index","splice","onTextChange","new_value","onImageChange","new_image","onVerticalChange","responsiveness","active_value","new_vertical","Object","onHorizontalChange","updateSetting","setting","createElement","key","label","value","perPage","onChange","perMove","checked","arrows","pagination","pauseOnHover","pauseOnFocus","drag","autoplay","interval","gap","help","easing","speed","rewind","rewindByDrag","rewindSpeed","start","options","direction","paginationDirection","type","map","slide","class","onSelect","imageObject","allowedTypes","multiple","labels","title","url","mediaPreview","src","tagName","placeholder","newText","allowedFormats","desktop","mobile","icon","onClick","save","_ref2","json","JSON","stringify","console","log","Fragment","role","Content","style","default"],"sourceRoot":""}