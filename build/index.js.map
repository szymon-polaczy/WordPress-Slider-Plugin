{"version":3,"file":"index.js","mappings":"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","sources":["webpack://wordpress-slider-plugin/external window [\"wp\",\"blockEditor\"]","webpack://wordpress-slider-plugin/external window [\"wp\",\"blocks\"]","webpack://wordpress-slider-plugin/external window [\"wp\",\"components\"]","webpack://wordpress-slider-plugin/external window [\"wp\",\"element\"]","webpack://wordpress-slider-plugin/webpack/bootstrap","webpack://wordpress-slider-plugin/webpack/runtime/compat get default export","webpack://wordpress-slider-plugin/webpack/runtime/define property getters","webpack://wordpress-slider-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://wordpress-slider-plugin/webpack/runtime/make namespace object","webpack://wordpress-slider-plugin/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\n\nimport {\n  IconButton,\n  PanelBody,\n  Panel,\n  SelectControl,\n  CheckboxControl,\n  RadioControl,\n  TextControl,\n  ToggleControl,\n} from '@wordpress/components';\n\nimport {\n  useBlockProps,\n  MediaPlaceholder,\n  RichText,\n  ColorPalette,\n  InspectorControls,\n} from '@wordpress/block-editor';\n\nimport metadata from './../block.json';\n\nregisterBlockType(\n  metadata,\n  {\n    edit: ({ attributes, setAttributes }) => {\n      const blockProps = useBlockProps();\n      const { slides, settings } = attributes;\n\n      const addSlide = () => {\n        const new_slide = { image: null, text: null, horizontal: null, vertical: null };\n        setAttributes({ slides: [...slides, new_slide] });\n      }\n\n      const removeSlide = index => {\n        slides.splice(index, 1);\n        setAttributes(slides);\n      }\n\n      const onTextChange = (new_value, index) => {\n        slides[index].text = new_value;\n        setAttributes(slides);\n      }\n\n      const onImageChange = (new_image, index) => {\n        slides[index].image = new_image;\n        setAttributes(slides);\n      }\n\n      const onVerticalChange = (new_value, index, responsiveness) => {\n        const active_value = slides[index].vertical;\n\n        if (active_value) {\n          active_value[responsiveness] = new_value;\n          slides[index].vertical = active_value;\n        } else {\n          const new_vertical = new Object();\n          new_vertical[responsiveness] = new_value;\n          slides[index].vertical = new_vertical;\n        }\n\n        setAttributes(slides);\n      }\n\n      const onHorizontalChange = (new_value, index) => {\n        slides[index].horizontal = new_value;\n        setAttributes(slides);\n      }\n\n        const updateSetting = (new_value, setting) => {\n            settings[setting] = new_value;\n            setAttributes({settings: {...settings}});\n        }\n\n\n\n      return <div {...blockProps}>\n        {slides ?\n          <section>\n            <InspectorControls key=\"setting\">\n              <TextControl\n                label=\"Slides per page\"\n                value={ settings.perPage }\n                onChange={ (new_value) => updateSetting(new_value, 'perPage') }\n              />\n\n              <TextControl\n                label=\"Slides per move\"\n                value={ settings.perMove }\n                onChange={ (new_value) => updateSetting(new_value, 'perMove') }\n              />\n\n              <ToggleControl\n                label=\"Enable arrows\"\n                checked={ settings.arrows }\n                onChange={ (new_value) => updateSetting(new_value, 'arrows') }\n              />\n\n              <ToggleControl\n                label=\"Enable pagination (indicator dots)\"\n              />\n\n              <ToggleControl\n                label=\"Enable pause on hover\"\n              />\n\n              <ToggleControl\n                label=\"Enable pause on focus\"\n              />\n\n              <ToggleControl\n                label=\"Enable dragging\"\n              />\n\n              <ToggleControl\n                label=\"Enable autoplay\"\n              />\n\n              <TextControl\n                label=\"Autoplay interval - Number of miliseconds between autoplay intervals\"\n              />\n\n              <TextControl\n                label=\"Gap between slides (The CSS format is acceptable)\"\n              />\n\n              <TextControl\n                label=\"Easing function\"\n                help=\"The CSS format is acceptable (linear, ease or cubic-bezier())\"\n              />\n\n              <TextControl\n                label=\"Transition speed\"\n                help=\"The transition speed in miliseconds (0 to insantly jump to the next)\"\n              />\n\n              <ToggleControl\n                label=\"Enable rewind to first slide (doesn't work in loop mode)\"\n              />\n\n              <ToggleControl\n                label=\"Enable rewind by drag to first slide (rewind option has to be enabled)\"\n              />\n\n              <TextControl\n                label=\"Rewind speed\"\n                help=\"The rewind speed in miliseconds (Transition speed is used as default)\"\n              />\n\n              <TextControl\n                label=\"Start slide\"\n                help=\"Define start index\"\n              />\n\n              <SelectControl\n                label=\"Slider direction\"\n                options={[\n                  { value: 'ltr', label: 'Left to right' },\n                  { value: 'rtl', label: 'Right to left' },\n                  { value: 'ttb', label: 'Top to bottom' },\n                ]}\n              />\n\n              <SelectControl\n                label=\"Pagination direction\"\n                options={[\n                  { value: 'ltr', label: 'Left to right' },\n                  { value: 'rtl', label: 'Right to left' },\n                  { value: 'ttb', label: 'Top to bottom' },\n                ]}\n              />\n\n              <SelectControl\n                label=\"Slider type\"\n                options={[\n                  { value: 'slide', label: 'Slide' },\n                  { value: 'loop', label: 'Loop' },\n                ]}\n              />\n            </InspectorControls>\n\n            {slides.map((slide, index) =>\n              <Panel class=\"slide\">\n                <PanelBody>\n                  <MediaPlaceholder\n                    onSelect={(imageObject) => onImageChange(imageObject, index)}\n                    allowedTypes={['image']}\n                    multiple={false}\n                    labels={{ title: null }}\n                    value={slide.image?.url}\n                    mediaPreview={slide.image ? <img src={slide.image.url} /> : ''}\n                  />\n\n                  <RichText\n                    class=\"rich-text\"\n                    tagName=\"div\"\n                    placeholder=\"Insert slider text here\"\n                    value={slide.text}\n                    onChange={(newText) => onTextChange(newText, index)}\n                    allowedFormats={['core/bold', 'core/italic', 'core/link', 'core/text-color', 'core/strikethrough']}\n                  />\n\n                  <div class=\"position-wrappers\">\n                    <SelectControl\n                      label=\"Vertical Position (Desktop)\"\n                      onChange={(value) => onVerticalChange(value, index, 'desktop')}\n                      value={slide.vertical?.desktop}\n                      options={[\n                        { label: 'Top', value: 'top' },\n                        { label: 'Center', value: 'center' },\n                        { label: 'Bottom', value: 'bottom' },\n                      ]}\n                    />\n\n                    <SelectControl\n                      label=\"Vertical Position (Mobile)\"\n                      onChange={(value) => onVerticalChange(value, index, 'mobile')}\n                      value={slide.vertical?.mobile}\n                      options={[\n                        { label: 'Top', value: 'top' },\n                        { label: 'Center', value: 'center' },\n                        { label: 'Bottom', value: 'bottom' },\n                      ]}\n                    />\n\n                    <SelectControl\n                      label=\"Horizontal Position (Full width on mobile)\"\n                      onChange={(value) => onHorizontalChange(value, index)}\n                      value={slide.horizontal}\n                      options={[\n                        { label: 'Left', value: 'left' },\n                        { label: 'Center', value: 'center' },\n                        { label: 'Right', value: 'right' },\n                      ]}\n                    />\n                  </div>\n\n                  <div class=\"remove-slide-wrapper\">\n                    <IconButton\n                      icon=\"no-alt\"\n                      label={`Delete slide number ${index}`}\n                      onClick={() => removeSlide(index)}\n                    />\n                  </div>\n                </PanelBody>\n              </Panel>\n            )}\n          </section> : <p>No Slides</p>}\n\n        <IconButton\n          icon=\"plus\"\n          label=\"Add another slide\"\n          onClick={addSlide}\n        >\n          Add Slide\n        </IconButton>\n      </div>\n    },\n    save: ({ attributes }) => {\n      const blockProps = useBlockProps.save();\n      const { slides, settings } = attributes;\n\n        const json = JSON.stringify(settings);\n      if (slides) {\n        return <>\n          <section {...blockProps}>\n            <div class=\"splide\" role=\"group\" \n                data-splide={json}\n              >\n              <div class=\"splide__track\">\n                <div class=\"splide__list\">\n                  {slides.map(slide =>\n                    <div class=\"splide__slide\">\n                      <article class=\"slide-text-overlay\"\n                        data-vertical-desktop={slide.vertical?.desktop}\n                        data-vertical-mobile={slide.vertical?.mobile}\n                        data-horizontal={slide.horizontal}\n                      >\n                        <div>\n                          <RichText.Content value={slide.text} />\n                        </div>\n                      </article>\n                      <img src={slide.image?.url}\n                        style=\"max-width: 100%; height: 100%; object-fit: cover;\"\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </section>\n        </>\n      } else {\n        return <p>No Slides</p>\n      }\n    },\n    attributes: {\n      slides: {\n        type: 'array',\n        default: [\n          {\n            image: null,\n            text: null,\n            horizontal: null,\n            vertical: null,\n          }\n        ],\n      },\n        settings: {\n            type: 'object',\n            default: {\n                perPage: {\n                    type: 'number',\n                    default: 1\n                },\n                perMove: {\n                    type: 'number',\n                    default: 1\n                },\n                arrows: {\n                    type: 'boolean',\n                    default: true\n                }\n            }\n        }\n    }\n  }\n)\n"],"names":["registerBlockType","IconButton","PanelBody","Panel","SelectControl","CheckboxControl","RadioControl","TextControl","ToggleControl","useBlockProps","MediaPlaceholder","RichText","ColorPalette","InspectorControls","metadata","edit","_ref","attributes","setAttributes","blockProps","slides","settings","addSlide","new_slide","image","text","horizontal","vertical","removeSlide","index","splice","onTextChange","new_value","onImageChange","new_image","onVerticalChange","responsiveness","active_value","new_vertical","Object","onHorizontalChange","updateSetting","setting","createElement","key","label","value","perPage","onChange","perMove","checked","arrows","help","options","map","slide","class","onSelect","imageObject","allowedTypes","multiple","labels","title","url","mediaPreview","src","tagName","placeholder","newText","allowedFormats","desktop","mobile","icon","onClick","save","_ref2","json","JSON","stringify","Fragment","role","Content","style","type","default"],"sourceRoot":""}